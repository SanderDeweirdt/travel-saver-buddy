
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rzrrqsskoflzwqofhjvd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ6cnJxc3Nrb2Zsendxb2ZoanZkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA4NjE5MjksImV4cCI6MjA1NjQzNzkyOX0.NIwkuA8L5UagTe4d6Xg15mATsEqdt_yb34pNvzQ53Tk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to check if a profile exists and create it if not
export const ensureUserProfile = async (userId: string, email: string | undefined): Promise<boolean> => {
  if (!userId) {
    console.error('Cannot ensure profile: No user ID provided');
    return false;
  }

  try {
    console.log('Checking if profile exists for user:', userId);

    // First check if the profile exists - with retry logic
    for (let attempt = 1; attempt <= 3; attempt++) {
      const { data: profile, error: fetchError } = await supabase
        .from('profiles')
        .select('id')
        .eq('id', userId)
        .single();

      // If profile exists, we're good
      if (profile) {
        console.log('Profile found on attempt', attempt, profile.id);
        return true;
      }

      // If error is not "no rows found", something else went wrong
      if (fetchError && fetchError.code !== 'PGRST116') {
        console.error(`Profile check error (attempt ${attempt}/3):`, fetchError);
        // Only throw on last attempt
        if (attempt === 3) {
          return false;
        }
      } else if (fetchError && fetchError.code === 'PGRST116') {
        // Profile doesn't exist, break the loop and try to create it
        console.log('Profile not found after attempt', attempt);
        break;
      }

      // Wait before retrying (200ms, 400ms)
      if (attempt < 3) {
        await new Promise(resolve => setTimeout(resolve, attempt * 200));
      }
    }

    // Profile doesn't exist, try to create it
    console.log('Creating profile for user:', userId);
    const { data: newProfile, error: insertError } = await supabase
      .from('profiles')
      .insert([{ 
        id: userId, 
        email: email || '' 
      }])
      .select()
      .single();

    if (insertError) {
      // Check for conflicts (might already exist due to race condition)
      if (insertError.code === '23505') { // unique_violation
        console.log('Profile already exists (conflict during creation)');
        return true;
      }
      
      console.error('Error creating profile:', insertError);
      return false;
    }

    console.log('Profile created successfully:', newProfile?.id);
    return !!newProfile;
  } catch (err) {
    console.error('Unexpected error in ensureUserProfile:', err);
    return false;
  }
};
